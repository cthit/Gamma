spring:
  datasource:
    username: ${DB_USER:postgres}
    password: ${DB_PASSWORD:example}
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_NAME:postgres}
  flyway:
    baseline-on-migrate: true
    locations: classpath:/db/migration
  output:
    ansi:
      enabled: ALWAYS
  jpa:
    show-sql: false
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    properties:
      hibernate:
        globally_quoted_identifiers: true
        temp:
          use_jdbc_metadata_defaults: false
    hibernate:
      ddl-auto: validate
    open-in-view: false

  servlet:
    multipart:
      max-file-size: 2MB
      max-request-size: 2MB
  data:
    redis:
      repositories:
        enabled: false
  thymeleaf:
    cache: false
    check-template: true
    check-template-location: true
    enabled: true
    encoding: UTF-8
    mode: HTML
    prefix: classpath:/templates/
    suffix: .html
    servlet:
      content-type: text/html

  session:
    store-type: redis

  redis:
    host: ${REDIS_HOST:0.0.0.0}
    password: ${REDIS_PASSWORD:}
    port: ${REDIS_PORT:6379}

server:
  port: ${SERVER_PORT:8081}
  error:
    whitelabel:
      enabled: false
    path: /error
  servlet:
    context-path: /api



logging:
  level:
    root: ${ROOT_DEBUG_LEVEL:INFO}
    org:
      springframework:
        web: ${WEB_DEBUG_LEVEL:INFO}
      hibernate: ${HIBERNATE_DEBUG_LEVEL:INFO}

security:
  jwt:
    token:
      secret-key: xJqKgDuIikgjkvOXI71j8LKkBlKg3bdr7/WYN6Q0uDs= # This is only for Development, should also be a secret one for Production
      expire-length: 2629746 #One Month. Subject to change.
      issuer: http://localhost:8081
      audience: http://localhost:3000

application:
  base-uri: http://localhost:8081/api/
  production: false
  files:
    path: uploads/
  cookie:
    domain: ${COOKIE_DOMAIN:localhost}
    path: ${COOKIE_PATH:/}
    validity-time: 31536000
  pre-populate-database: true
  frontend-client-details:
    successful-login-uri: ${SUCCESSFUL_LOGIN:http://localhost:3000}
  standard-admin-account:
    password: ${ADMIN_PASSWORD:password}
  mocking: ${IS_MOCKING:true}
  default-oauth2-client:
    client-name: ${DEFAULT_CLIENT_NAME:type}
    client-id: ${DEFAULT_CLIENT_ID:id}
    client-secret: ${DEFAULT_CLIENT_SECRET:secret}
    redirect-uri: ${DEFAULT_REDIRECT_URI:http://localhost:3001/auth/account/callback}
    api-key: ${DEFAULT_API_KEY:key}
  gotify:
    key: "key"                  # This is not needed, but application crashes since it looks for these values.
    url: "https://gotify.chalmers.it"
  allowed-origin: ${CORS_ALLOWED_ORIGIN:http://localhost:3000}
  auth:
    accessTokenValidityTime: 3600
    refreshTokenValidityTime: 500000000

