buildscript {
    ext {
        springBootVersion = "2.4.+"
        springVersion = "5.3.+"
        recordBuilderVersion = "1.19"
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    }
}

plugins {
    id "java"
    id "eclipse"
    id "application"
    id "checkstyle"
    id "pmd"
//    id "jacoco"
    id "nebula.lint" version "16.7.0"
}

apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
group = "it.chalmers"
version = "1.0.0-SNAPSHOT"
sourceCompatibility = 16
mainClassName = "it.chalmers.gamma.GammaApplication"

repositories {
    mavenCentral()
}

dependencies {
    annotationProcessor(
            "io.soabase.record-builder:record-builder-processor:${recordBuilderVersion}"
    )

    implementation(
            "org.springframework:spring-tx:${springVersion}",
            "org.springframework.security:spring-security-core:${springVersion}",
            "org.springframework.security:spring-security-web:${springVersion}",
            "org.springframework:spring-beans:${springVersion}",
            "org.springframework.data:spring-data-jpa:${springBootVersion}",
            "org.springframework:spring-core:${springVersion}",
            "org.springframework:spring-web:${springVersion}",
            "org.springframework:spring-context:${springVersion}",
            "org.springframework:spring-webmvc:${springVersion}",
            "org.springframework.security:spring-security-config:${springVersion}",
            "org.springframework.security.oauth:spring-security-oauth2:${springBootVersion}",
            "org.springframework.boot:spring-boot-autoconfigure:${springBootVersion}",
            "org.springframework.session:spring-session-core:${springBootVersion}",
            "org.springframework.boot:spring-boot:${springBootVersion}",
            "org.springframework.boot:spring-boot-starter-validation:${springBootVersion}",
//            "org.hibernate:hibernate-core:5.4.30.Final",
            "org.apache.tomcat.embed:tomcat-embed-core:9.0.34",
//            "org.jboss.spec.javax.transaction:jboss-transaction-api_1.2_spec:1.1.1.Final",
            "org.apache.httpcomponents:httpcore:4.4.14",
            "javax.persistence:javax.persistence-api:2.2",
            "org.apache.httpcomponents:httpclient:4.5.6",
            "javax.transaction:javax.transaction-api:1.3",
            "org.slf4j:slf4j-api:1.7.30",
            "com.fasterxml.jackson.core:jackson-annotations:2.12.2",
            "com.fasterxml.jackson.core:jackson-databind:2.12.2",
            "com.fasterxml.jackson.core:jackson-core:2.12.2",
            "com.googlecode.json-simple:json-simple:1.1.1",
            "io.jsonwebtoken:jjwt:0.9.1",
            "commons-io:commons-io:2.6",
            "org.apache.httpcomponents:httpmime:4.5.12",
            "io.soabase.record-builder:record-builder-core:${recordBuilderVersion}"
    )

    runtimeOnly(
            "org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:${springBootVersion}",
            "org.springframework.boot:spring-boot-devtools:${springBootVersion}",
            "org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}",
            "org.springframework.boot:spring-boot-starter-web:${springBootVersion}",
            "org.springframework.boot:spring-boot-starter-data-redis:${springBootVersion}",
            "org.springframework.session:spring-session-data-redis:${springBootVersion}",
            "org.springframework.boot:spring-boot-starter-thymeleaf:${springBootVersion}",
            "org.postgresql:postgresql:42.2.12",
            "org.flywaydb:flyway-core:7.7.2"
    )

    testImplementation(
            "org.springframework:spring-test:${springVersion}",
            "org.springframework.security:spring-security-test:${springVersion}",
            "org.springframework.boot:spring-boot-test-autoconfigure:${springBootVersion}",
            "org.springframework.boot:spring-boot-starter-test:${springBootVersion}",
//            'org.junit.jupiter:junit-jupiter-engine:5.7.1',
//            'org.mockito:mockito-junit-jupiter:3.8.0'
    )

    testRuntimeOnly(
            "com.h2database:h2:1.4.200",
    )
}

test {
    useJUnitPlatform()
}

repositories {
    mavenCentral()
}

checkstyle {
    toolVersion = "8.11"
    ignoreFailures = false
    maxWarnings = 0
    configFile = project(":").file("config/checkstyle/checkstyle.xml")
    configProperties = ["suppressionFile": project(":").file("config/checkstyle/suppressions.xml")]
}

pmd {
    toolVersion = "6.21.0"
    consoleOutput = false
    ignoreFailures = false
    ruleSets = []
    ruleSetConfig = resources.text.fromFile("./config/pmd/ruleset.xml")
}

// Is not perfect, but gives you an idea of what needs to be changed
//gradleLint {
//    rules = ["dependency-parentheses", "archaic-wrapper"]
//}
