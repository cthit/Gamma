name: Build and Test

on:
  push:
    branches: [main]
    tags:
      - v[0-9]+.[0-9]+.[0-9]+*
  pull_request:
    branches: [main]

jobs:
  build-and-publish:
    runs-on: ubuntu-24.04
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 25
        uses: actions/setup-java@v5
        with:
          java-version: "25"
          distribution: "temurin"

      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: Check
        run: ./gradlew check

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/gamma
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=edge
            type=ref,event=pr

      - name: Build Docker image
        run: ./gradlew bootBuildImage

      - name: Push docker image
        run: |
          for tag in $(jq -r '.tags | join(" ")' <<< $DOCKER_METADATA_OUTPUT_JSON ); do
            docker image tag app:latest $tag
          done
          docker image push --all-tags ghcr.io/${{ github.repository_owner }}/gamma

  e2e-tests:
    needs: build-and-publish
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.18.3

      - name: Install dependencies
        run: cd e2e && pnpm install

      - name: Check code formatting
        run: cd e2e && pnpm run format:check

      - name: Install Playwright Browsers
        run: cd e2e && pnpm exec playwright install --with-deps chromium

      - name: Determine Gamma version
        id: gamma-version
        run: |
          SHA="${{ github.sha }}"
          echo "version=sha-${SHA:0:7}" >> $GITHUB_OUTPUT

      - name: Run E2E tests
        run: make test-e2e GAMMA_VERSION=${{ steps.gamma-version.outputs.version }}

      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: e2e/playwright-report/
          retention-days: 30
