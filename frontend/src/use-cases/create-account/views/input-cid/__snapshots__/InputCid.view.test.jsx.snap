// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<InputCid/> Shallow render of <InputCid/> 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <InputCid
    sendCid={[Function]}
    text={Object {}}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <styled.div>
        <DeltaForm
                initialValues={
                        Object {
                                "cid": "",
                              }
                }
                onSubmit={[Function]}
                render={[Function]}
                validationSchema={
                        ObjectSchema {
                                "_blacklist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "_conditions": Array [],
                                "_defaultDefault": [Function],
                                "_deps": Array [],
                                "_excludedEdges": Array [],
                                "_exclusive": Object {},
                                "_mutate": false,
                                "_nodes": Array [
                                  "cid",
                                ],
                                "_options": Object {
                                  "abortEarly": true,
                                  "recursive": true,
                                },
                                "_type": "object",
                                "_typeError": [Function],
                                "_whitelist": RefSet {
                                  "list": Set {},
                                  "refs": Map {},
                                },
                                "fields": Object {
                                  "cid": StringSchema {
                                    "_blacklist": RefSet {
                                      "list": Set {},
                                      "refs": Map {},
                                    },
                                    "_conditions": Array [],
                                    "_deps": Array [],
                                    "_exclusive": Object {
                                      "required": false,
                                    },
                                    "_mutate": false,
                                    "_options": Object {
                                      "abortEarly": true,
                                      "recursive": true,
                                    },
                                    "_type": "string",
                                    "_typeError": [Function],
                                    "_whitelist": RefSet {
                                      "list": Set {},
                                      "refs": Map {},
                                    },
                                    "tests": Array [
                                      [Function],
                                      [Function],
                                    ],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                  },
                                },
                                "tests": Array [],
                                "transforms": Array [
                                  [Function],
                                ],
                              }
                }
        />
</styled.div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <DeltaForm
          initialValues={
                    Object {
                              "cid": "",
                            }
          }
          onSubmit={[Function]}
          render={[Function]}
          validationSchema={
                    ObjectSchema {
                              "_blacklist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "_conditions": Array [],
                              "_defaultDefault": [Function],
                              "_deps": Array [],
                              "_excludedEdges": Array [],
                              "_exclusive": Object {},
                              "_mutate": false,
                              "_nodes": Array [
                                "cid",
                              ],
                              "_options": Object {
                                "abortEarly": true,
                                "recursive": true,
                              },
                              "_type": "object",
                              "_typeError": [Function],
                              "_whitelist": RefSet {
                                "list": Set {},
                                "refs": Map {},
                              },
                              "fields": Object {
                                "cid": StringSchema {
                                  "_blacklist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "_conditions": Array [],
                                  "_deps": Array [],
                                  "_exclusive": Object {
                                    "required": false,
                                  },
                                  "_mutate": false,
                                  "_options": Object {
                                    "abortEarly": true,
                                    "recursive": true,
                                  },
                                  "_type": "string",
                                  "_typeError": [Function],
                                  "_whitelist": RefSet {
                                    "list": Set {},
                                    "refs": Map {},
                                  },
                                  "tests": Array [
                                    [Function],
                                    [Function],
                                  ],
                                  "transforms": Array [
                                    [Function],
                                  ],
                                },
                              },
                              "tests": Array [],
                              "transforms": Array [
                                [Function],
                              ],
                            }
          }
/>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "initialValues": Object {
            "cid": "",
          },
          "onSubmit": [Function],
          "render": [Function],
          "validationSchema": ObjectSchema {
            "_blacklist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "_conditions": Array [],
            "_defaultDefault": [Function],
            "_deps": Array [],
            "_excludedEdges": Array [],
            "_exclusive": Object {},
            "_mutate": false,
            "_nodes": Array [
              "cid",
            ],
            "_options": Object {
              "abortEarly": true,
              "recursive": true,
            },
            "_type": "object",
            "_typeError": [Function],
            "_whitelist": RefSet {
              "list": Set {},
              "refs": Map {},
            },
            "fields": Object {
              "cid": StringSchema {
                "_blacklist": RefSet {
                  "list": Set {},
                  "refs": Map {},
                },
                "_conditions": Array [],
                "_deps": Array [],
                "_exclusive": Object {
                  "required": false,
                },
                "_mutate": false,
                "_options": Object {
                  "abortEarly": true,
                  "recursive": true,
                },
                "_type": "string",
                "_typeError": [Function],
                "_whitelist": RefSet {
                  "list": Set {},
                  "refs": Map {},
                },
                "tests": Array [
                  [Function],
                  [Function],
                ],
                "transforms": Array [
                  [Function],
                ],
              },
            },
            "tests": Array [],
            "transforms": Array [
              [Function],
            ],
          },
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <styled.div>
          <DeltaForm
                    initialValues={
                              Object {
                                        "cid": "",
                                      }
                    }
                    onSubmit={[Function]}
                    render={[Function]}
                    validationSchema={
                              ObjectSchema {
                                        "_blacklist": RefSet {
                                          "list": Set {},
                                          "refs": Map {},
                                        },
                                        "_conditions": Array [],
                                        "_defaultDefault": [Function],
                                        "_deps": Array [],
                                        "_excludedEdges": Array [],
                                        "_exclusive": Object {},
                                        "_mutate": false,
                                        "_nodes": Array [
                                          "cid",
                                        ],
                                        "_options": Object {
                                          "abortEarly": true,
                                          "recursive": true,
                                        },
                                        "_type": "object",
                                        "_typeError": [Function],
                                        "_whitelist": RefSet {
                                          "list": Set {},
                                          "refs": Map {},
                                        },
                                        "fields": Object {
                                          "cid": StringSchema {
                                            "_blacklist": RefSet {
                                              "list": Set {},
                                              "refs": Map {},
                                            },
                                            "_conditions": Array [],
                                            "_deps": Array [],
                                            "_exclusive": Object {
                                              "required": false,
                                            },
                                            "_mutate": false,
                                            "_options": Object {
                                              "abortEarly": true,
                                              "recursive": true,
                                            },
                                            "_type": "string",
                                            "_typeError": [Function],
                                            "_whitelist": RefSet {
                                              "list": Set {},
                                              "refs": Map {},
                                            },
                                            "tests": Array [
                                              [Function],
                                              [Function],
                                            ],
                                            "transforms": Array [
                                              [Function],
                                            ],
                                          },
                                        },
                                        "tests": Array [],
                                        "transforms": Array [
                                          [Function],
                                        ],
                                      }
                    }
          />
</styled.div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": <DeltaForm
            initialValues={
                        Object {
                                    "cid": "",
                                  }
            }
            onSubmit={[Function]}
            render={[Function]}
            validationSchema={
                        ObjectSchema {
                                    "_blacklist": RefSet {
                                      "list": Set {},
                                      "refs": Map {},
                                    },
                                    "_conditions": Array [],
                                    "_defaultDefault": [Function],
                                    "_deps": Array [],
                                    "_excludedEdges": Array [],
                                    "_exclusive": Object {},
                                    "_mutate": false,
                                    "_nodes": Array [
                                      "cid",
                                    ],
                                    "_options": Object {
                                      "abortEarly": true,
                                      "recursive": true,
                                    },
                                    "_type": "object",
                                    "_typeError": [Function],
                                    "_whitelist": RefSet {
                                      "list": Set {},
                                      "refs": Map {},
                                    },
                                    "fields": Object {
                                      "cid": StringSchema {
                                        "_blacklist": RefSet {
                                          "list": Set {},
                                          "refs": Map {},
                                        },
                                        "_conditions": Array [],
                                        "_deps": Array [],
                                        "_exclusive": Object {
                                          "required": false,
                                        },
                                        "_mutate": false,
                                        "_options": Object {
                                          "abortEarly": true,
                                          "recursive": true,
                                        },
                                        "_type": "string",
                                        "_typeError": [Function],
                                        "_whitelist": RefSet {
                                          "list": Set {},
                                          "refs": Map {},
                                        },
                                        "tests": Array [
                                          [Function],
                                          [Function],
                                        ],
                                        "transforms": Array [
                                          [Function],
                                        ],
                                      },
                                    },
                                    "tests": Array [],
                                    "transforms": Array [
                                      [Function],
                                    ],
                                  }
            }
/>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "initialValues": Object {
              "cid": "",
            },
            "onSubmit": [Function],
            "render": [Function],
            "validationSchema": ObjectSchema {
              "_blacklist": RefSet {
                "list": Set {},
                "refs": Map {},
              },
              "_conditions": Array [],
              "_defaultDefault": [Function],
              "_deps": Array [],
              "_excludedEdges": Array [],
              "_exclusive": Object {},
              "_mutate": false,
              "_nodes": Array [
                "cid",
              ],
              "_options": Object {
                "abortEarly": true,
                "recursive": true,
              },
              "_type": "object",
              "_typeError": [Function],
              "_whitelist": RefSet {
                "list": Set {},
                "refs": Map {},
              },
              "fields": Object {
                "cid": StringSchema {
                  "_blacklist": RefSet {
                    "list": Set {},
                    "refs": Map {},
                  },
                  "_conditions": Array [],
                  "_deps": Array [],
                  "_exclusive": Object {
                    "required": false,
                  },
                  "_mutate": false,
                  "_options": Object {
                    "abortEarly": true,
                    "recursive": true,
                  },
                  "_type": "string",
                  "_typeError": [Function],
                  "_whitelist": RefSet {
                    "list": Set {},
                    "refs": Map {},
                  },
                  "tests": Array [
                    [Function],
                    [Function],
                  ],
                  "transforms": Array [
                    [Function],
                  ],
                },
              },
              "tests": Array [],
              "transforms": Array [
                [Function],
              ],
            },
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
